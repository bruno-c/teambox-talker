#!/usr/bin/env ruby
$:.unshift File.dirname(__FILE__) + "/../lib"
require "optparse"
require "rubygems"
require "talker/server"

runner = Talker::Server::Runner.new

OptionParser.new do |opts|
  opts.banner = "Usage: #{$PROGRAM_NAME} [options]"

  opts.separator "Server"
  opts.on("--host HOST", "Server host")                   { |x| runner[:host] = x }
  opts.on("-p", "--port NUM", "Server port")              { |x| runner[:port] = x.to_i }
  
  opts.separator "SSL"
  opts.on("--private-key FILE", "PEM private key file")   { |x| runner[:private_key_file] = x }
  opts.on("--cert-chain FILE", "X509 certificates chain") { |x| runner[:cert_chain_file] = x }
  
  opts.separator "AMQP"
  opts.on("--amqp-host HOST", "AMQP Server host")         { |x| runner[:amqp][:host] = x }
  opts.on("--amqp-port NUM", "AMQP Server port")          { |x| runner[:amqp][:port] = x.to_i }
  
  opts.separator "Limits"
  opts.on("--descriptors NUM", "Descriptor table size")   { |x| runner[:descriptor_table_size] = x.to_i }
  opts.on("--user NAME", "Running user")                  { |x| runner[:user] = x }
  
  opts.separator "Logging"
  opts.on("--logger FILE", "Log to file")                 { |x| runner[:logger] = x }
  opts.on("-d", "--debug", "Debug mode")                  { |x| runner[:debug] = true }
  
  opts.separator "Database"
  opts.on("--database NAME", "Database name")             { |x| runner[:database][:database] = x }
  opts.on("--db-user NAME", "Database username")          { |x| runner[:database][:user] = x }
  opts.on("--db-password VALUE", "Database password")     { |x| runner[:database][:password] = x }
  opts.on("--db-host NAME", "Database host")              { |x| runner[:database][:host] = x }
  
  opts.separator "Other"
  opts.on_tail("-h", "--help", "Show this message")       { puts opts; exit }
end.parse!(ARGV)

case cmd = ARGV.first
when "reset"
  runner.reset
else
  runner.run(cmd)
end
