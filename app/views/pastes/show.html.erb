<% @title = "Paste #" + @paste.id %>

<% content_for :head do %>
  <style>
    html { overflow: hidden } /* for Win IE 6 */
    body { margin:0; padding:0; border:0; overflow: hidden; }
    #editorcontainer { height: 1000px; /* changed programmatically */ }
    #editorcontainer iframe { width: 100%; height: 100%; border:0; padding:0; margin:0; }
  </style>
  <script type="text/javascript" charset="utf-8">
    Talker.currentUser = <%= current_user.to_json %>;
    Talker.paste = <%= @paste.to_json %>;
    
    Orbited.settings.hostname = '<%= request.host %>';
    Orbited.settings.port = <%= Orbited.port %>;
    Orbited.settings.protocol = '<%= request.ssl? ? "https" : "http" %>'
    Orbited.settings.streaming = true;
    TCPSocket = Orbited.TCPSocket;
    
    $(function() {
      document.domain = document.domain;
      
      // Usage:
      //   var cs = editor.prepareUserChangeset(); // get diff
      //   editor.applyPreparedChangesetToBase();  // reset local copy
      //   // on remote
      //   editor.applyChangesToBase(cs.changeset, null, cs.apool); // apply diff
      
      window.editor = new Ace2Editor();
      // var text = "<%= escape_javascript @paste.content %>"; // initial text
      // var text = "ohae\nhi\n"; // initial text
      var text = "ohaie\nhi there\n"; // initial text
      
      editor.resize = function() {
        $("#editorcontainer").get(0).style.height = "100%";
        editor.getFrame().style.height = ((document.documentElement.clientHeight)-1)+"px";
        editor.adjustSize();
      };
      
      editor.init("editorcontainer", text, function() {
        editor.setAuthorInfo("1", {bgcolor: "#ccf"});
        editor.setAuthorInfo("2", {bgcolor: "#fcc"});
        // editor.setBaseText(text + "\n");
        editor.setBaseAttributedText({text: text + "\n", attribs: "+3*0+1|1+2+2*0+6|2+2|22"},
                                     {numToAttrib:{"0":{"0":"author","1":"1"},
                                                   "1":{"0":"author","1":"2"}}, nextNum:2});
        editor.setEditable(true);
        editor.setProperty("showsauthorcolors", true);
        editor.setProperty("userauthor", Talker.currentUser.id.toString());
        editor.setProperty("wraps", true);
        editor.setUserChangeNotificationCallback(function() {
          // Compute local diff
          var cs = editor.prepareUserChangeset();
          // Send to server
          Talker.client.queueSend({type: 'message', user: Talker.currentUser, content: cs.changeset}, function() {
            // Reset local copy when sent
            console.info(cs.changeset);
            editor.applyPreparedChangesetToBase();
          });
        });
        editor.resize();
        $(window).bind("resize", editor.resize);
        setTimeout(function() {editor.focus();}, 0);
      });
      
      
      var receiver = {};
      receiver.onMessageReceived = function(event) {
        // Do not apply local diff
        if (event.user.id == Talker.currentUser.id) return false;
        
        editor.applyChangesToBase(event.content, event.user.id.toString(),
                                  {numToAttrib:{"0":{"0":"author","1":event.user.id}},nextNum:1});
      };
      
      // Talker.plugins.push(new Talker.ErrorHandler($("#error")));
      Talker.plugins.push(new Talker.Users());
      Talker.plugins.push(receiver);
      
      Talker.client = new Talker.Client({
        host: '<%= Orbited.talker_host %>', 
        port: <%= Orbited.talker_port %>, 
        paste: Talker.paste.id,
        token: <%= current_user.talker_token.to_json %>,
        callbacks: Talker.Broadcaster
      }).connect();
      
      $(window).bind('beforeunload', function() { Talker.client.reset() });
    });
  </script>
<% end %>

<div id="editorcontainer"><!-- --></div>
