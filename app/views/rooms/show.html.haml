- content_for :head do
  :javascript
    Orbited.settings.hostname = '#{request.host}';
    Orbited.settings.port = #{Orbited.port};
    Orbited.settings.protocol = '#{request.ssl? ? "https" : "http"}'
    Orbited.settings.streaming = true;
    TCPSocket = Orbited.TCPSocket;
    
    $(function() {
      document.domain = document.domain;
      client = new TalkerClient({
        host: '#{Orbited.talker_host}', 
        port: #{Orbited.talker_port}, 
        room: #{@room.id}, 
        user: #{{:id => current_user.id, :name => current_user.name, :livetyping => current_user.livetyping}.to_json},
        token: #{current_user.talker_token.to_json},
        onNewMessage: ChatRoom.onNewMessage, 
        onJoin: ChatRoom.onJoin, 
        onLeave: ChatRoom.onLeave,
        onClose: ChatRoom.onClose
      });
      ChatRoom.current_user = client.options.user;
      ChatRoom.room = '#{@room.name}';
      ChatRoom.client = client;
      // "user":{"id":"unique id","name":"user name",...}
      client.connect();
      $(window).bind('beforeunload', function() { client.reset() });
      $("a#leave").click(function() {
        client.close();
        var link = this;
        client.options.onClose = function() {
          window.location = link.href;
        }
        return false;
      });
    });
    

- @title = @room.name

#sidebar
  %h1&= @room.name
  %p&= @room.description
  %p
    = link_to "Leave", rooms_path, :id => "leave"
  %h2 Users
  %ul#users
    = render :partial => "user", :collection => @room.users
%table#log
  = render :partial => "messages/messages", :object => @events
  %tr.message.event#message
    %td.author&= current_user.name
    %td.new_content
      %form#msgForm{:action => room_messages_path(@room)}
        %textarea#msgbox{:rows => 1}
